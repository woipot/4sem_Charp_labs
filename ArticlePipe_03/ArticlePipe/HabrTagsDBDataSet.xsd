<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HabrTagsDBDataSet" targetNamespace="http://tempuri.org/HabrTagsDBDataSet.xsd" xmlns:mstns="http://tempuri.org/HabrTagsDBDataSet.xsd" xmlns="http://tempuri.org/HabrTagsDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="HabrTagsDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HabrTagsDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ArticlePipe.Properties.Settings.GlobalReference.Default.HabrTagsDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProcessedArticlesTableAdapter" GeneratorDataComponentClassName="ProcessedArticlesTableAdapter" Name="ProcessedArticles" UserDataComponentName="ProcessedArticlesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HabrTagsDBConnectionString (Settings)" DbObjectName="dbo.ProcessedArticles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProcessedArticles] WHERE (([ProcessedArticleCount] = @Original_ProcessedArticleCount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProcessedArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProcessedArticleCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProcessedArticles] ([ProcessedArticleCount]) VALUES (@ProcessedArticleCount);
SELECT ProcessedArticleCount FROM ProcessedArticles WHERE (ProcessedArticleCount = @ProcessedArticleCount)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProcessedArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProcessedArticleCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProcessedArticleCount FROM dbo.ProcessedArticles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProcessedArticles] SET [ProcessedArticleCount] = @ProcessedArticleCount WHERE (([ProcessedArticleCount] = @Original_ProcessedArticleCount));
SELECT ProcessedArticleCount FROM ProcessedArticles WHERE (ProcessedArticleCount = @ProcessedArticleCount)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProcessedArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProcessedArticleCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProcessedArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProcessedArticleCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProcessedArticleCount" DataSetColumn="ProcessedArticleCount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TagsTableAdapter" GeneratorDataComponentClassName="TagsTableAdapter" Name="Tags" UserDataComponentName="TagsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HabrTagsDBConnectionString (Settings)" DbObjectName="dbo.Tags" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tags] WHERE (([TagHash] = @Original_TagHash) AND ([ArticleCount] = @Original_ArticleCount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TagHash" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TagHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArticleCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tags] ([TagHash], [Tag], [ArticleCount], [ArticlesId]) VALUES (@TagHash, @Tag, @ArticleCount, @ArticlesId);
SELECT TagHash, Tag, ArticleCount, ArticlesId FROM Tags WHERE (TagHash = @TagHash)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TagHash" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TagHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Tag" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Tag" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArticleCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ArticlesId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ArticlesId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TagHash, Tag, ArticleCount, ArticlesId FROM dbo.Tags</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tags] SET [TagHash] = @TagHash, [Tag] = @Tag, [ArticleCount] = @ArticleCount, [ArticlesId] = @ArticlesId WHERE (([TagHash] = @Original_TagHash) AND ([ArticleCount] = @Original_ArticleCount));
SELECT TagHash, Tag, ArticleCount, ArticlesId FROM Tags WHERE (TagHash = @TagHash)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TagHash" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TagHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Tag" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Tag" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArticleCount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ArticlesId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ArticlesId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TagHash" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TagHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ArticleCount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArticleCount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TagHash" DataSetColumn="TagHash" />
              <Mapping SourceColumn="Tag" DataSetColumn="Tag" />
              <Mapping SourceColumn="ArticleCount" DataSetColumn="ArticleCount" />
              <Mapping SourceColumn="ArticlesId" DataSetColumn="ArticlesId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HabrTagsDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="HabrTagsDBDataSet" msprop:Generator_UserDSName="HabrTagsDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ProcessedArticles" msprop:Generator_TableClassName="ProcessedArticlesDataTable" msprop:Generator_TableVarName="tableProcessedArticles" msprop:Generator_TablePropName="ProcessedArticles" msprop:Generator_RowDeletingName="ProcessedArticlesRowDeleting" msprop:Generator_RowChangingName="ProcessedArticlesRowChanging" msprop:Generator_RowEvHandlerName="ProcessedArticlesRowChangeEventHandler" msprop:Generator_RowDeletedName="ProcessedArticlesRowDeleted" msprop:Generator_UserTableName="ProcessedArticles" msprop:Generator_RowChangedName="ProcessedArticlesRowChanged" msprop:Generator_RowEvArgName="ProcessedArticlesRowChangeEvent" msprop:Generator_RowClassName="ProcessedArticlesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProcessedArticleCount" msprop:Generator_ColumnVarNameInTable="columnProcessedArticleCount" msprop:Generator_ColumnPropNameInRow="ProcessedArticleCount" msprop:Generator_ColumnPropNameInTable="ProcessedArticleCountColumn" msprop:Generator_UserColumnName="ProcessedArticleCount" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tags" msprop:Generator_TableClassName="TagsDataTable" msprop:Generator_TableVarName="tableTags" msprop:Generator_TablePropName="Tags" msprop:Generator_RowDeletingName="TagsRowDeleting" msprop:Generator_RowChangingName="TagsRowChanging" msprop:Generator_RowEvHandlerName="TagsRowChangeEventHandler" msprop:Generator_RowDeletedName="TagsRowDeleted" msprop:Generator_UserTableName="Tags" msprop:Generator_RowChangedName="TagsRowChanged" msprop:Generator_RowEvArgName="TagsRowChangeEvent" msprop:Generator_RowClassName="TagsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TagHash" msprop:Generator_ColumnVarNameInTable="columnTagHash" msprop:Generator_ColumnPropNameInRow="TagHash" msprop:Generator_ColumnPropNameInTable="TagHashColumn" msprop:Generator_UserColumnName="TagHash" type="xs:int" />
              <xs:element name="Tag" msprop:Generator_ColumnVarNameInTable="columnTag" msprop:Generator_ColumnPropNameInRow="Tag" msprop:Generator_ColumnPropNameInTable="TagColumn" msprop:Generator_UserColumnName="Tag">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ArticleCount" msprop:Generator_ColumnVarNameInTable="columnArticleCount" msprop:Generator_ColumnPropNameInRow="ArticleCount" msprop:Generator_ColumnPropNameInTable="ArticleCountColumn" msprop:Generator_UserColumnName="ArticleCount" type="xs:int" />
              <xs:element name="ArticlesId" msprop:Generator_ColumnVarNameInTable="columnArticlesId" msprop:Generator_ColumnPropNameInRow="ArticlesId" msprop:Generator_ColumnPropNameInTable="ArticlesIdColumn" msprop:Generator_UserColumnName="ArticlesId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProcessedArticles" />
      <xs:field xpath="mstns:ProcessedArticleCount" />
    </xs:unique>
    <xs:unique name="Tags_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tags" />
      <xs:field xpath="mstns:TagHash" />
    </xs:unique>
  </xs:element>
</xs:schema>